name: Bump App Version CI

on:
  workflow_dispatch:
  schedule:
    # run every 4 hours
    - cron: "20 */4 * * *"

jobs:
  bump-version:
    runs-on: ubuntu-latest
    env:
      OWNER: FriesI23
      REPO: mhabit
      PATCH_NAME: changes.patch
    outputs:
      patch-name: ${{ env.PATCH_NAME }}
      changed: ${{ steps.diff.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: sersoft-gmbh/setup-gh-cli-action@v2
        with:
          version: stable
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - run: |
          python -m pip install --upgrade pip
          pip install packaging pyyaml toml
      - run: |
          cd ..
          curl -L https://github.com/TheAppgineer/flatpak-flutter/archive/refs/tags/0.7.3.tar.gz \
            -o flatpak-flutter.tar.gz
          tar -xzf flatpak-flutter.tar.gz
          mv flatpak-flutter-0.7.3 flatpak-flutter
      - name: Get Latest Release
        id: release-info
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ env.OWNER }}/${{ env.REPO }}
        run: |
          TAG=$(gh release list --repo $REPO --limit 1 --json tagName  --jq '.[0].tagName')
          COMMIT=$(gh api repos/$REPO/git/ref/tags/$TAG -q .object.sha)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT
      - name: Show Release Info
        run: |
          echo "Latest tag: ${{ steps.release-info.outputs.tag }}"
          echo "Commit SHA: ${{ steps.release-info.outputs.commit }}"
      - name: Update flatpak-flutter.yml
        env:
          FILE: flatpak-flutter.yml
          URL: https://github.com/FriesI23/mhabit.git
          NEW_TAG: ${{ steps.release-info.outputs.tag }}
          NEW_COMMIT: ${{ steps.release-info.outputs.commit }}
        run: >
          yq -i e
          '(.modules[].sources[] | select(.url == env(URL)) | .tag) = env(NEW_TAG)
          | (.modules[].sources[] | select(.url == env(URL)) | .commit) = env(NEW_COMMIT)'
          "$FILE"
      - name: Check for changes
        id: diff
        run: |
          git diff --quiet || echo "changed=true" >> $GITHUB_OUTPUT
      - name: Build Flatpak Flutter
        if: steps.diff.outputs.changed == 'true'
        run: |
          mkdir -p assets/l10n
          touch assets/l10n/_untranslated.json
          python3 ../flatpak-flutter/flatpak-flutter.py flatpak-flutter.yml
      - name: Generate patch
        if: steps.diff.outputs.changed == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add .
          git diff --cached >  ${{ env.PATCH_NAME }}
          cat ${{ env.PATCH_NAME }}
      - name: Upload patch
        if: steps.diff.outputs.changed == 'true'
        id: upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PATCH_NAME }}
          path: ${{ env.PATCH_NAME }}
      - name: Clear
        if: always()
        run: |
          rm -fr assets

  checking:
    needs:
      - bump-version
    if: needs.bump-version.outputs.changed == 'true'
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-24.08
      options: --privileged
    env:
      PATCH_NAME: ${{ needs.bump-version.outputs.patch-name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fetch Bundle
        id: fetch-bundle-step
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PATCH_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          ls -R .
          cat ${{ env.PATCH_NAME }}
          git apply ${{ env.PATCH_NAME }}
      - name: Check and Build
        run: |
          flatpak run --command=flatpak-builder-lint org.flatpak.Builder manifest \
            io.github.friesi23.mhabit.yml
          flatpak run --command=flathub-build org.flatpak.Builder \
            io.github.friesi23.mhabit.yml
          flatpak run --command=flatpak-builder-lint org.flatpak.Builder repo repo

  # pull-request:
  #   needs:
  #     - checking
  #   runs-on: ubuntu-latest
  #   steps:
